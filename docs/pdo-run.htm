<html>
  <head>
    <title>PhpLivePdo::Run</title>
    <link rel="stylesheet" href="global.css">
  </head>
  <body style="background-color: #333; font-family: 'Fira Sans', 'Source Sans Pro', Helvetica, Arial, sans-serif;">
    <table style="width:88%;margin-left: auto;margin-right: auto;">
      <tr>
        <td style="background-color: #F2F2F2; padding: 20px;">
          <div class="maintitle">PhpLivePdo::Run</div>
          <p>Send a query to run in database</p>
          <p>&nbsp;</p>

          <div class="title">Sintaxe</div>
          <br>
          <div style="background-color: #fff; padding: 10px; border: dotted 1px;">
            <span class="const">public</span> <span class="func">PhpLivePdo::Run</span> ( 
            <span class="type">string</span> <span class="var">$Query</span> [,
            <span class="type">array</span> <span class="var">$Params</span> = [] [,
            <span class="type">array</span> <span class="var">$Options</span> = []
            ] ] ) : <span class="const">mixed</span>;
          </div>
          <p>&nbsp;</p>

          <div class="title">Parameters</div>
          <p><strong class="var">$Query</strong></p>
          <p>The query to be executed</p>
          <p><strong class="var">$Params</strong></p>
          <p>A array with the tokens to be replaced:</p>
          <div style="background-color: #fff; padding: 10px; border: dotted 1px;">
            [TokenName, TokenData, TokenType]
          </div>
          <p>TokenName (<span class="type">int</span> or <span class="type">string</span>) - A number or a string starting with ":";</p>
          <p>TokenData (<span class="type">int</span> or <span class="type">string</span>) - The value to be replaced;</p>
          <p>TokenType (<span class="type">int</span>) The constants of <span class="func">PhpLivePdo</span> (<span class="const">PdoInt</span>, <span class="const">PdoStr</span>, <span class="const">PdoNull</span>, <span class="const">PdoBool</span>, <span class="const">PdoSql</span>) or the <a href="https://www.php.net/manual/pt_BR/pdo.constants.php" target="_blank">constants of PDO</a>;</p>
          <p><strong><span class="var">$Options</span>:</strong></p>
          <p>&nbsp;&nbsp;Safe (<span class="type">bool</span>)(Optional - Default: <span class="const">true</span>) - Dont run query update or delete without where condition or the query truncate;</p>
          <p>&nbsp;&nbsp;Debug (<span class="type">bool</span>)(Optional - Default: <span class="const">false</span>) - Dump the query after parsed;</p>
          <p>&nbsp;&nbsp;Log (<span class="type">int</span>)(Optional) - The log description of the event;</p>
          <p>&nbsp;&nbsp;User (<span class="type">int</span>)(Optional - Mandatory with Log) - The user running the query;</p>
          <p>&nbsp;&nbsp;Target (<span class="type">int</span>)(Optional - Optional with Log) - The user afected by the query;</p>
          <p>&nbsp;</p>

          <div class="title">The special type <span class="const">PdoSql</span></div>
          <p>This special type not make sense with command <span class="func">PhpLivePdo::Run</span>. See the command <a href="pdo-insert.htm#PdoSql" class="func">PhpLivePdo::Insert</a></p>
          <p>&nbsp;</p>

          <div class="title">Note about type <span class="const">PdoInt</span></div>
          <p>The <span class="func">PhpLivePdo</span> automaticaly changes the comma to point, for number used in regions like Brazil.</p>
          <p>&nbsp;</p>

          <div class="title">Return Values</div>
          <p>Return an integer in case of insert, update and delete, an array in case of select, or <strong class="const">FALSE</strong> in case of error in <span class="func">PhpLivePdo</span>;</p>
          <p>&nbsp;</p>

          <div class="title">Examples</div>
          <br>
          <p><strong></strong>A simple query:</strong></p>
          <div style="background-color: #fff; padding: 10px; border: dotted 1px;">
            <span class="var">$result</span> = <span class="func">$PDO->Run</span>(<span class="string">"select * from users"</span>);
          </div>
          <p><strong>A query with ordened tokens:</strong></p>
          <div style="background-color: #fff; padding: 10px; border: dotted 1px;">
            <span class="var">$result</span> = <span class="func">$PDO->Run</span>(<span class="string">"select * from users where email=? and city=?"</span>, [<br>
              &nbsp;&nbsp;&nbsp;[<span class="const">1</span>, <span class="var">$_POST[<span class="string">"email"</span>]</span>, <span class="const">PdoStr</span>],<br>
              &nbsp;&nbsp;&nbsp;[<span class="const">2</span>, <span class="var">$_POST[<span class="string">"city"</span>]</span>, <span class="const">PdoInt</span>]<br>
            ]);
          </div>
          <p><strong>A query with named tokens:</strong></p>
          <div style="background-color: #fff; padding: 10px; border: dotted 1px;">
            <span class="var">$result</span> = <span class="func">$PDO->Run</span>(<span class="string">"select * from users where name like :name or city like :name"</span>, [<br>
              &nbsp;&nbsp;&nbsp;[<span class="string">":name"</span>, <span class="string">"%"</span> . <span class="var">$_POST[<span class="string">"name"</span>]</span> . <span class="string">"%"</span>, <span class="const">PdoStr</span>],<br>
            ]);
          </div>
          <p><strong>A simple query with table prefix:</strong></p>
          <div style="background-color: #fff; padding: 10px; border: dotted 1px;">
            <span class="var">$result</span> = <span class="var">$PDO->Run</span>(<span class="string">"select * from ##users"</span>);<br>
            <span class="comment">// Execute the query: select * from sys_users</span>
          </div>
          <br>
          
          <p><strong>Getting the values returned:</strong></p>
          <div style="background-color: #fff; padding: 10px; border: dotted 1px;">
            <span class="var">$result</span> = <span class="func">$PDO->Run</span>(<span class="string">"select * from ##users"</span>);<br>
            <span class="type">echo</span> <span class="string">"Welcome "</span> . <span class="var">$result</span>[<span class="const">0</span>][<span class="string">"name"</span>];
          </div>
          <p><strong>Getting the values returned:</strong></p>
          <div style="background-color: #fff; padding: 10px; border: dotted 1px;">
            <span class="var">$result</span> = <span class="var">$PDO->Run</span>(<span class="string">"select * from ##users"</span>);<br>
            <span class="type">foreach</span>(<span class="var">$result</span> <span class="type">as</span> <span class="var">$line</span>):<br>
              &nbsp;&nbsp;&nbsp;<span class="type">echo</span> <span class="var">$line</span>[<span class="string">"name"</span>] . <span class="string">"&lt;br>"</span>;<br>
              <span class="type">endforeach;</span>
          </div>
          <p><strong>Debbuging a query:</strong></p>
          <div style="background-color: #fff; padding: 10px; border: dotted 1px;">
            <span class="var">$result</span> = <span class="func">$PDO->Run</span>(<span class="string">"select * from users where email=? and city=?"</span>,<br>
              &nbsp;&nbsp;&nbsp;[<br>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[<span class="const">1</span>, <span class="var">$_POST</span>[<span class="string">"email"</span>], <span class="const">PdoStr</span>],<br>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[<span class="const">2</span>, <span class="var">$_POST</span>[<span class="string">"city"</span>], <span class="const">PdoInt</span>]<br>
              &nbsp;&nbsp;&nbsp;], [<br>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"Debug"</span> => <span class="const">true</span><br>
              &nbsp;&nbsp;&nbsp;]<br>
            );
          </div>
          <p>&nbsp;</p>

        </td>
        <td style="width:300px; color: #ccc; font-size: 18px; vertical-align: top;">
          <iframe src="menu-funcs.htm" class="menu1"></iframe>
          <iframe src="menu-pdo.htm" class="menu2"></iframe>
        </td>
      </tr>
    </table>
  </body>
</html>